#version 450

layout(binding = 0) buffer Binding { 
	int values[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(constant_id = 0) const uint BUFFER_ELEMENTS = 0;

const uint WIDTH = 8;
const uint HEIGHT = 8;

#define INDEX(_x, _y) ((_y) * WIDTH + (_x))
#define IS_CONNECTED(_idx) (values[_idx] >= 0)
#define LABEL(_idx) (values[_idx])
#define NTH_MERGE() (values[255])

int find_root(uint index) {
	int v = LABEL(index);
	if (v < 0) {
		return v;
	}
	v = int(index);
	while (LABEL(v) != v) {
		v = LABEL(v);
	}
	return v;
}

void merge(uint x0) {
	uint x1 = x0 + 1;
	for (uint y = 0; y < HEIGHT; ++y) {
		uint i0 = INDEX(x0, y);
		uint i1 = INDEX(x1, y);
		if (IS_CONNECTED(i0) && IS_CONNECTED(i1)) {
			int v0 = find_root(i0);
			int v1 = find_root(i1);
			LABEL(max(v0, v1)) = LABEL(min(v0, v1));
		}
	}
}

void main() {
	uint id = gl_GlobalInvocationID.x;
	uint nth = NTH_MERGE();
	uint steps = WIDTH / (WIDTH >> (nth + 1));
    uint x0 = (id * steps) + (1 << nth) - 1;
	merge(x0);
}
